# Nginx configuration for QAravan with SSL
# File: /etc/nginx/sites-available/qaravan

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name bladriverbla.com www.bladriverbla.com;
    return 301 https://$server_name$request_uri;
}

# HTTPS configuration
server {
    listen 443 ssl http2;
    server_name bladriverbla.com www.bladriverbla.com;

    # SSL Configuration (will be updated by certbot)
    ssl_certificate /etc/letsencrypt/live/bladriverbla.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bladriverbla.com/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers for Telegram Web App
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://telegram.org; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self' https://web.telegram.org;" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must_revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Root directory
    root /var/www/qaravan/.next/static;
    index index.html;

    # Handle Next.js routing
    location / {
        try_files $uri $uri/ @nextjs;
    }

    # Proxy to Next.js application
    location @nextjs {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Telegram Web App specific headers
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
    }

    # Handle static files
    location /_next/static/ {
        alias /var/www/qaravan/.next/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle API routes
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
    }

    location ~ ^/(package\.json|package-lock\.json|\.env.*|README\.md)$ {
        deny all;
    }

    # Logs
    access_log /var/log/nginx/qaravan.access.log;
    error_log /var/log/nginx/qaravan.error.log;
} 